;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2009 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: AC-7625-2E2D-92			    |
; |				 Valued	Client				    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	AABF5C934234A70885DEA7A0C8B3B5DE


    Ideal
    include uni.inc ; see unicode subdir of ida	for info on unicode

    p386n
    model large

    include "__MAGIC.inc"



; Segment type:	Pure code
segment	seg005 byte public 'CODE' use16
    assume cs:seg005
    ;org 0Eh
    assume es:nothing, ss:nothing, ds:dseg, fs:nothing,	gs:nothing


; Attributes: noreturn bp-based	frame

proc ST_ExitWithMemDiag	far

varPtrCharArr= byte ptr	-92h
varPrintString=	byte ptr -7Eh
varHeapMemAvail= word ptr -6
varLargest4bytePageBlock= word ptr -4
varCountOf4bytePages= word ptr -2

    push bp
    mov	bp, sp

loc_14231:
    sub	sp, 146
    call ST_GetDosMemAvail_KB
    mov	[bp+varCountOf4bytePages], ax
    mov	ax, [ptrWorstFreeKb]
    mov	[bp+varLargest4bytePageBlock], ax
    call _coreleft
    mov	[bp+varHeapMemAvail], ax
    mov	ax, offset aData
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcpy
    pop	cx
    pop	cx
    mov	ax, offset aFree
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, 10
    push ax
    lea	ax, [bp+varPtrCharArr]
    push ax
    xor	ax, ax
    push ax
    push [bp+varHeapMemAvail]
    call _ltoa
    add	sp, 8
    lea	ax, [bp+varPtrCharArr]
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, offset aBytesMemory
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, offset aFree
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, 10
    push ax
    lea	ax, [bp+varPtrCharArr]
    push ax
    push [bp+varCountOf4bytePages]
    call _itoa
    add	sp, 6
    lea	ax, [bp+varPtrCharArr]
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, offset aKWorst
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, offset aFree
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, 10
    push ax
    lea	ax, [bp+varPtrCharArr]
    push ax
    push [bp+varLargest4bytePageBlock]
    call _itoa
    add	sp, 6
    lea	ax, [bp+varPtrCharArr]
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, offset aKEmm
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, 10
    push ax
    lea	ax, [bp+varPtrCharArr]
    push ax
    push [ST_HeapBase]
    call _itoa
    add	sp, 6
    lea	ax, [bp+varPtrCharArr]
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, offset aBlocks
    push ax
    lea	ax, [bp+varPrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    lea	ax, [bp+varPrintString]
    push ax
    nop
    push cs
    call near ptr EXIT_CleanUp
    pop	cx
    mov	sp, bp
    pop	bp
    retf
endp ST_ExitWithMemDiag



; Attributes: noreturn bp-based	frame

proc f050207_EXIT_CleanUp far

arg0_PrintString= word ptr  6

    push bp
    mov	bp, sp
    call AIL_someSequence
    call DOS_MouseReset
    call Call_AIL_shutdown
    call Chk_RelMemHandle
    call idk_PushPop_EsDsSiDi
    call ST_SetVideoMode_TEXT
    push [bp+arg0_PrintString]
    call DOS_Print_Exit
    pop	cx
    pop	bp
    retf
endp f050207_EXIT_CleanUp



; Attributes: noreturn bp-based	frame

proc idk_CleanupPrintExit_s14391 far

arg0_PrintString= byte ptr -0Ah
argNumber= word	ptr  6

    push bp
    mov	bp, sp
    sub	sp, 0Ah
    mov	ax, 0Ah
    push ax
    lea	ax, [bp+arg0_PrintString]
    push ax
    push [bp+argNumber]
    call _itoa
    add	sp, 6
    call AIL_someSequence
    call DOS_MouseReset
    call Call_AIL_shutdown
    call Chk_RelMemHandle
    call idk_PushPop_EsDsSiDi
    call ST_SetVideoMode_TEXT
    lea	ax, [bp+arg0_PrintString]
    push ax
    call DOS_Print_Exit
    pop	cx
    mov	sp, bp
    pop	bp
    retf
endp idk_CleanupPrintExit_s14391



; Attributes: noreturn bp-based	frame

proc ST_execl_WizardsExe far

arg0_PrintString= byte ptr -52h
filehandle= word ptr -2
arg0= word ptr	6
argExeFileName=	word ptr  0Ch

    push bp
    mov	bp, sp
    sub	sp, 52h
    push si
    mov	si, [bp+arg0]
    call AIL_someSequence
    call sub_1E4E2
    or	ax, ax
    jnz	short loc_143F8

loc_143EE:
    call sub_1E525
    call sub_2E303

loc_143F8:
    call DOS_MouseReset
    call Call_AIL_shutdown
    call _fcloseall
    mov	[bp+filehandle], 5
    jmp	short loc_14418

loc_1440E:
    mov	ah, 3Eh
    mov	bx, [bp+filehandle]
    int	21h
    inc	[bp+filehandle]

loc_14418:
    cmp	[bp+filehandle], BCpp30_DOSH_dosSearchInfo.ds_nameZ
    jl	short loc_1440E

loc_1441E:
    call EMM_LoopRelease
    xor	ax, ax
    push ax
    push [bp+argExeFileName]
    push [word ptr bp+0Ah]
    push [bp+arg0+2]
    push si
    push si
    call _execl
    add	sp, 0Ch
    mov	ax, offset aErrorGameFile
    push ax
    lea	ax, [bp+arg0_PrintString]
    push ax
    call _strcpy
    pop	cx
    pop	cx
    push si
    lea	ax, [bp+arg0_PrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    mov	ax, offset aCouldNotBeFoun
    push ax
    lea	ax, [bp+arg0_PrintString]
    push ax
    call _strcat
    pop	cx
    pop	cx
    lea	ax, [bp+arg0_PrintString]
    push ax
    push cs

loc_14468:
    call near ptr EXIT_CleanUp
    pop	cx
    pop	si
    mov	sp, bp
    pop	bp
    retf
endp ST_execl_WizardsExe



; Attributes: bp-based frame

proc ST_UpdateWorstFreeKb far
    push bp
    mov	bp, sp
    push si
    call ST_GetDosMemAvail_KB
    mov	si, ax
    cmp	si, [ptrWorstFreeKb]
    jnb	short CURRENT_NOT_WORSE

New_Worst_Free_Kb:
    mov	[ptrWorstFreeKb], si

CURRENT_NOT_WORSE:
    pop	si
    pop	bp
    retf
endp ST_UpdateWorstFreeKb



; Attributes: noreturn bp-based	frame

proc idk_Cleanup_PrintFileTextMode_Exit_s14489 far
    push bp
    mov	bp, sp
    sub	sp, 72h
    push si
    push di
    call AIL_someSequence
    call DOS_MouseReset
    call Call_AIL_shutdown
    call Chk_RelMemHandle
    call idk_PushPop_EsDsSiDi
    call ST_SetVideoMode_TEXT
    push [word ptr bp+6]
    call DOS_FindFirst
    pop	cx
    mov	[bp-2],	dx
    mov	[bp-4],	ax
    xor	ax, ax
    mov	dx, 52h
    push ax
    push dx
    push [word ptr bp-2]
    push [word ptr bp-4]
    call LDIV@
    mov	[bp-6],	ax
    mov	ax, offset strRBr5
    push ax
    push [word ptr bp+6]
    call _fopen
    pop	cx
    pop	cx
    mov	[bp-0Eh], ax
    xor	si, si
    mov	[word ptr bp-0Ah], 0Fh
    mov	[word ptr bp-0Ch], 0
    xor	di, di
    jmp	short loc_14567

loc_144F4:
    push [word ptr bp-0Eh]
    mov	ax, 1
    push ax
    mov	ax, 2
    push ax
    lea	ax, [bp-8]
    push ax
    call _fread
    add	sp, 8
    push [word ptr bp-0Eh]
    mov	ax, 1
    push ax
    mov	ax, 80
    push ax
    lea	ax, [bp-72h]
    push ax
    call _fread
    add	sp, 8
    cmp	[byte ptr bp-72h], 10h
    jge	short loc_14539

loc_14528:
    mov	al, [bp-72h]
    cbw
    mov	[bp-0Ah], ax
    mov	al, [bp-71h]
    cbw
    mov	[bp-0Ch], ax
    dec	si
    jmp	short loc_14565

loc_14539:
    cmp	[byte ptr bp-72h], 10h
    jnz	short loc_14544
    mov	si, 0FFFFh
    jmp	short loc_14565

loc_14544:
    cmp	[byte ptr bp-72h], 11h
    jnz	short loc_1454C
    jmp	short loc_14565

loc_1454C:
    xor	ax, ax
    push ax
    lea	ax, [bp-72h]
    push ax
    push [word ptr bp-0Ch]
    push [word ptr bp-0Ah]
    push si
    push [word ptr bp-8]
    nop
    push cs
    call near ptr idk_OutputText_TextMode
    add	sp, 0Ch

loc_14565:
    inc	si
    inc	di

loc_14567:
    cmp	di, [bp-6]
    jl	short loc_144F4

CLRSCR_EXIT:
    push [word ptr bp-0Eh]
    call _fclose
    pop	cx
    mov	ax, offset strCRLF20
    push ax
    call DOS_Print_Exit
    pop	cx
    pop	di
    pop	si
    mov	sp, bp
    pop	bp
    retf
endp idk_Cleanup_PrintFileTextMode_Exit_s14489 ; sp-analysis failed



; Attributes: bp-based frame

proc idk_OutputText_TextMode far

var_2= word ptr	-2
arg_0= word ptr	 6
arg_2= word ptr	 8
arg_4= word ptr	 0Ah
arg_6= word ptr	 0Ch
arg_8= word ptr	 0Eh
arg_A= word ptr	 10h

    push bp
    mov	bp, sp
    sub	sp, 2
    push si
    push di
    cmp	[bp+arg_A], 0
    jnz	short loc_14598
    mov	ax, ds
    mov	[bp+arg_A], ax

loc_14598:
    mov	ax, [bp+arg_6]
    shl	ax, 1
    shl	ax, 1
    shl	ax, 1
    shl	ax, 1
    add	ax, [bp+arg_4]
    mov	[bp+var_2], ax
    mov	ax, [bp+arg_2]
    shl	ax, 1
    shl	ax, 1
    add	ax, [bp+arg_2]
    shl	ax, 1
    add	ax, TEXT_MODE_VIDEO_RAM
    mov	es, ax
    mov	di, [bp+arg_0]
    shl	di, 1
    push ds
    mov	si, [bp+arg_8]
    mov	bx, [bp+var_2]
    mov	ax, [bp+arg_A]
    mov	ds, ax

loc_145CB:
    lodsb
    cmp	al, 0
    jz	short loc_145D6

loc_145D0:
    stosb
    mov	al, bl
    stosb
    jmp	short loc_145CB

loc_145D6:
    pop	ds
    pop	di
    pop	si
    mov	sp, bp
    pop	bp
    retf
endp idk_OutputText_TextMode

ends seg005
