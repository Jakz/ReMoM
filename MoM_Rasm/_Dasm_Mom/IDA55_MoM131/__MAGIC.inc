;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2009 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: AC-7625-2E2D-92			    |
; |				 Valued	Client				    |
; +-------------------------------------------------------------------------+
;

struc struc_atexit_t ; (sizeof=0x8)
atexit_t dw 4 dup(?)
ends struc_atexit_t


struc FILE ; (sizeof=0x14, standard type)
level dw ?
flags dw ?
fd db ?
hold db	?
bsize dw ?
buffer dd ?		; offset
curp dd	?		; offset
istemp dw ?
token dw ?
ends FILE


;	  ;/* Data for the Loader */
;
; LdDesc	  STRUC
; LdErrorMsg	  db	  'Exec failure.',00Dh,00Ah
; LdStack	  db	  80H dup(?)	  ;Loader stack
; LdPSP		  dw	  ?		  ;PSP address
; LdPathName	  db	  80 dup(?)	  ;File	to be loaded
; LdAX		  dw	  ?		  ;Parse file name results
; LdExeSignature  dw	  ?		  ;EXE header buffer
; LdLength	  dw	  ?
; LdNbPages	  dw	  ?
; LdNbItems	  dw	  ?
; LdHdrSize	  dw	  ?
; LdMin		  dw	  ?
; LdMax		  dw	  ?
; LdSS		  dw	  ?
; LdSP		  dw	  ?
; LdCheckSum	  dw	  ?
; LdIP		  dw	  ?
; LdCS		  dw	  ?
; LdLoadAddr	  dw	  ?		  ;Load	Overlay	interface block
; LdRelocFactor	  dw	  ?		  ;Relocation factor to	be used
; LdDesc	  ENDS
;
struc BCpp30_LdDesc ; (sizeof=0xFF)
LdErrorMsg db 15 dup(?)	; 'Exec failure.',00Dh,00Ah
LdStack	db 128 dup(?)
LdPSP dw ?
LdPathName db 80 dup(?)
LdAX dw	?
LdExeSignature dw ?
LdLength dw ?
LdNbPages dw ?
LdNbItems dw ?
LdHdrSize dw ?
LdMin dw ?		; ;Load	Overlay	interface block
LdMax dw ?		; ;Relocation factor to	be used
LdSS dw	?
LdSP dw	?
LdCheckSum dw ?
LdIP dw	?
LdCS dw	?
LdLoadAddr dw ?
LdRelocFactor dw ?
ends BCpp30_LdDesc


struc BCpp30_StartExit ; (sizeof=0x5)
calltype db ?		; ; 0=near,1=far,ff=not	used
priority db ?		; ; 0=highest,ff=lowest
addrlow	dw ?
addrhigh db ?
ends BCpp30_StartExit


; .\BORLANDC\INCLUDE\DOS.H
; typedef struct {
;     char    ds_drive;		 /* do not change    */
;     char    ds_pattern [13];	 /*  these fields,	 */
;     char    ds_reserved [7];	 /*   Microsoft	reserved */
;     char    ds_attrib;
;     short   ds_time;
;     short   ds_date;
;     long    ds_size;
;     char    ds_nameZ [13];	 /* result of the search, asciiz */
; }   dosSearchInfo;  /* used with DOS functions 4E, 4F	  */
;
struc BCpp30_DOSH_dosSearchInfo	; (sizeof=0x2B)
ds_drive db ?
ds_pattern db 13 dup(?)
ds_reserved db 7 dup(?)
ds_attrib db ?
ds_time	dw ?
ds_date	dw ?
ds_size	dd ?
ds_nameZ db 13 dup(?)
ends BCpp30_DOSH_dosSearchInfo


struc _stub_descr ; (sizeof=0x20)
int_code db 2 dup(?)	; Overlay manager interrupt
memswap	dw ?		; Runtime memory swap address
fileoff	dd ?		; Offset in the	file to	the code
codesize dw ?		; Code size
relsize	dw ?		; Relocation area size
nentries dw ?		; Number of overlay entries
prevstub dw ?		; Previous stub
workarea db 16 dup(?)	; base 16
ends _stub_descr


struc struc_ConfigMom ;	(sizeof=0x14)
field_0	dw ?
field_2	dw ?
field_4	dw ?
field_6	dw ?
field_8	dw ?
field_A	dw ?
field_C	dw ?
field_E	dw ?
field_10 dw ?
field_12 dw ?
ends struc_ConfigMom


struc struct_CitySizes ; (sizeof=0x29)
Outpost	db 8 dup(?)	; string(C)
Hamlet db 7 dup(?)	; string(C)
Village	db 8 dup(?)	; string(C)
Town db	5 dup(?)	; string(C)
City db	5 dup(?)	; string(C)
Capital	db 8 dup(?)	; string(C)
ends struct_CitySizes


struc struct_CityEnchantments ;	(sizeof=0x16E)
SummoningCircl db 17 dup(?) ; string(C)
EarthGate db 11	dup(?)	; string(C)
StreamOfLife db	15 dup(?) ; string(C)
AstralGate db 12 dup(?)	; string(C)
Fortress db 9 dup(?)	; string(C)
DarkRituals db 13 dup(?) ; string(C)
AltarOfBattle db 16 dup(?) ; string(C)
WallOfFire db 13 dup(?)	; string(C)
ChaosRift db 11	dup(?)	; string(C)
EvilPresence db	14 dup(?) ; string(C)
CursedLands db 13 dup(?) ; string(C)
Pestilence db 11 dup(?)	; string(C)
CloudOfShadow db 16 dup(?) ; string(C)
Famine db 7 dup(?)	; string(C)
Flying db 7 dup(?)	; string(C)
NatureWard db 12 dup(?)	; string(C)
SorceryWard db 13 dup(?) ; string(C)
ChaosWard db 11	dup(?)	; string(C)
LifeWard db 10 dup(?)	; string(C)
DeathWard db 11	dup(?)	; string(C)
NatureSEye db 13 dup(?)	; string(C)
StreamOfLife_0 db 15 dup(?) ; string(C)
GaiasBlessing db 16 dup(?) ; string(C)
Inspirations db	13 dup(?) ; string(C)
Prosperity db 11 dup(?)	; string(C)
HeavenlyLight db 15 dup(?) ; string(C)
Consecration db	13 dup(?) ; string(C)
WallOfDarkness db 17 dup(?) ; string(C)
Nightshade db 11 dup(?)	; string(C)
ends struct_CityEnchantments


struc struct_HeroTitles	; (sizeof=0x130)
aDwarf db 6 dup(?)	; string(C)
aBarbarian db 10 dup(?)	; string(C)
aSage db 5 dup(?)	; string(C)
aDervish db 8 dup(?)	; string(C)
aBeastmaster db	12 dup(?) ; string(C)
aBard db 5 dup(?)	; string(C)
aOrcWarrior db 12 dup(?) ; string(C)
aHealer	db 7 dup(?)	; string(C)
aHuntress db 9 dup(?)	; string(C)
aThief db 6 dup(?)	; string(C)
aDruid db 6 dup(?)	; string(C)
aWarMonk db 9 dup(?)	; string(C)
aWarriorMage db	13 dup(?) ; string(C)
aMagician db 9 dup(?)	; string(C)
aAssassin db 9 dup(?)	; string(C)
aWindMage db 10	dup(?)	; string(C)
aRanger	db 7 dup(?)	; string(C)
aDraconian db 10 dup(?)	; string(C)
aWitch db 6 dup(?)	; string(C)
aGoldenOne db 11 dup(?)	; string(C)
aNinja db 6 dup(?)	; string(C)
aRogue db 6 dup(?)	; string(C)
aAmazon	db 7 dup(?)	; string(C)
aWarlock db 8 dup(?)	; string(C)
aUnknown db 8 dup(?)	; string(C)
aIllusionist db	12 dup(?) ; string(C)
aSwordsman db 10 dup(?)	; string(C)
aPriestess db 10 dup(?)	; string(C)
aPaladin db 8 dup(?)	; string(C)
aBlackKnight db	13 dup(?) ; string(C)
aElvenArcher db	13 dup(?) ; string(C)
aNecromancer db	12 dup(?) ; string(C)
aChaosWarrior db 14 dup(?) ; string(C)
aChosen	db 7 dup(?)	; string(C)
ends struct_HeroTitles


struc struct_UnitTypes ; (sizeof=0x37E)
aTrireme db 8 dup(?)	; string(C)
aGalley	db 7 dup(?)	; string(C)
aCatapult db 9 dup(?)	; string(C)
aWarship db 8 dup(?)	; string(C)
aSpearmen db 9 dup(?)	; string(C)
aSwordsmen db 10 dup(?)	; string(C)
aBowmen	db 7 dup(?)	; string(C)
aCavalry db 8 dup(?)	; string(C)
aShaman	db 7 dup(?)	; string(C)
aSettlers db 9 dup(?)	; string(C)
aBerserkers db 11 dup(?) ; string(C)
aHalberdiers db	12 dup(?) ; string(C)
aPriests db 8 dup(?)	; string(C)
aMagicians db 10 dup(?)	; string(C)
aEngineers db 10 dup(?)	; string(C)
aCentaurs db 9 dup(?)	; string(C)
aManticores db 11 dup(?) ; string(C)
aMinotaurs db 10 dup(?)	; string(C)
aNightblades db	12 dup(?) ; string(C)
aWarlocks db 9 dup(?)	; string(C)
aNightmares db 11 dup(?) ; string(C)
aDoomDrakes db 12 dup(?) ; string(C)
aAirShip db 9 dup(?)	; string(C)
aHammerhands db	12 dup(?) ; string(C)
aSteamCannon db	13 dup(?) ; string(C)
aGolem db 6 dup(?)	; string(C)
aWolfRiders db 12 dup(?) ; string(C)
aSlingers db 9 dup(?)	; string(C)
aLongbowmen db 11 dup(?) ; string(C)
aElvenLords db 12 dup(?) ; string(C)
aPegasai db 8 dup(?)	; string(C)
aPikemen db 8 dup(?)	; string(C)
aPaladins db 9 dup(?)	; string(C)
aStagBeetle db 12 dup(?) ; string(C)
aJavelineers db	12 dup(?) ; string(C)
aDragonTurtle db 14 dup(?) ; string(C)
aHorsebowmen db	12 dup(?) ; string(C)
aRangers db 8 dup(?)	; string(C)
aGriffins db 9 dup(?)	; string(C)
aWyvernRiders db 14 dup(?) ; string(C)
aWarTrolls db 11 dup(?)	; string(C)
aWarMammoths db	13 dup(?) ; string(C)
aMagicSpirit db	13 dup(?) ; string(C)
aHellHounds db 12 dup(?) ; string(C)
aGargoyles db 10 dup(?)	; string(C)
aFireGiant db 11 dup(?)	; string(C)
aFireElemental db 15 dup(?) ; string(C)
aChaosSpawn db 12 dup(?) ; string(C)
aChimera db 8 dup(?)	; string(C)
aDoomBat db 9 dup(?)	; string(C)
aEfreet	db 7 dup(?)	; string(C)
aHydra db 6 dup(?)	; string(C)
aGreatDrake db 12 dup(?) ; string(C)
aSkeletons db 10 dup(?)	; string(C)
aGhouls	db 7 dup(?)	; string(C)
aNightStalker db 14 dup(?) ; string(C)
aWerewolves db 11 dup(?) ; string(C)
aDemon db 6 dup(?)	; string(C)
aWraiths db 8 dup(?)	; string(C)
aShadowDemons db 14 dup(?) ; string(C)
aDeathKnights db 14 dup(?) ; string(C)
aDemonLord db 11 dup(?)	; string(C)
aZombies db 8 dup(?)	; string(C)
aUnicorns db 9 dup(?)	; string(C)
aGuardianSpirit	db 16 dup(?) ; string(C)
aAngel db 6 dup(?)	; string(C)
aArchAngel db 11 dup(?)	; string(C)
aWarBears db 10	dup(?)	; string(C)
aSprites db 8 dup(?)	; string(C)
aCockatrices db	12 dup(?) ; string(C)
aBasilisk db 9 dup(?)	; string(C)
aGiantSpiders db 14 dup(?) ; string(C)
aStoneGiant db 12 dup(?) ; string(C)
aColossus db 9 dup(?)	; string(C)
aGorgons db 8 dup(?)	; string(C)
aEarthElemental	db 16 dup(?) ; string(C)
aBehemoth db 9 dup(?)	; string(C)
aGreatWyrm db 11 dup(?)	; string(C)
aFloatingIsland	db 16 dup(?) ; string(C)
aPhantomBeast db 14 dup(?) ; string(C)
aPhantomWarrior	db 17 dup(?) ; string(C)
aStormGiant db 12 dup(?) ; string(C)
aAirElemental db 14 dup(?) ; string(C)
aDjinn db 6 dup(?)	; string(C)
aSkyDrake db 10	dup(?)	; string(C)
aNagas db 6 dup(?)	; string(C)
ends struct_UnitTypes


struc struct_Units ; (sizeof=0x37E)
Trireme	db 8 dup(?)	; string(C)
Galley db 7 dup(?)	; string(C)
Catapult db 9 dup(?)	; string(C)
Warship	db 8 dup(?)	; string(C)
Spearmen db 9 dup(?)	; string(C)
Swordsmen db 10	dup(?)	; string(C)
Bowmen db 7 dup(?)	; string(C)
Cavalry	db 8 dup(?)	; string(C)
Shaman db 7 dup(?)	; string(C)
Settlers db 9 dup(?)	; string(C)
Berserkers db 11 dup(?)	; string(C)
Halberdiers db 12 dup(?) ; string(C)
Priests	db 8 dup(?)	; string(C)
Magicians db 10	dup(?)	; string(C)
Engineers db 10	dup(?)	; string(C)
Centaurs db 9 dup(?)	; string(C)
Manticores db 11 dup(?)	; string(C)
Minotaurs db 10	dup(?)	; string(C)
Nightblades db 12 dup(?) ; string(C)
Warlocks db 9 dup(?)	; string(C)
Nightmares db 11 dup(?)	; string(C)
DoomDrakes db 12 dup(?)	; string(C)
AirShip	db 9 dup(?)	; string(C)
Hammerhands db 12 dup(?) ; string(C)
SteamCannon db 13 dup(?) ; string(C)
Golem db 6 dup(?)	; string(C)
WolfRiders db 12 dup(?)	; string(C)
Slingers db 9 dup(?)	; string(C)
Longbowmen db 11 dup(?)	; string(C)
ElvenLords db 12 dup(?)	; string(C)
Pegasai	db 8 dup(?)	; string(C)
Pikemen	db 8 dup(?)	; string(C)
Paladins db 9 dup(?)	; string(C)
StagBeetle db 12 dup(?)	; string(C)
Javelineers db 12 dup(?) ; string(C)
DragonTurtle db	14 dup(?) ; string(C)
Horsebowmen db 12 dup(?) ; string(C)
Rangers	db 8 dup(?)	; string(C)
Griffins db 9 dup(?)	; string(C)
WyvernRiders db	14 dup(?) ; string(C)
WarTrolls db 11	dup(?)	; string(C)
WarMammoths db 13 dup(?) ; string(C)
MagicSpirit db 13 dup(?) ; string(C)
HellHounds db 12 dup(?)	; string(C)
Gargoyles db 10	dup(?)	; string(C)
FireGiant db 11	dup(?)	; string(C)
FireElemental db 15 dup(?) ; string(C)
ChaosSpawn db 12 dup(?)	; string(C)
Chimera	db 8 dup(?)	; string(C)
DoomBat	db 9 dup(?)	; string(C)
Efreet db 7 dup(?)	; string(C)
Hydra db 6 dup(?)	; string(C)
GreatDrake db 12 dup(?)	; string(C)
Skeletons db 10	dup(?)	; string(C)
Ghouls db 7 dup(?)	; string(C)
NightStalker db	14 dup(?) ; string(C)
Werewolves db 11 dup(?)	; string(C)
Demon db 6 dup(?)	; string(C)
Wraiths	db 8 dup(?)	; string(C)
ShadowDemons db	14 dup(?) ; string(C)
DeathKnights db	14 dup(?) ; string(C)
DemonLord db 11	dup(?)	; string(C)
Zombies	db 8 dup(?)	; string(C)
Unicorns db 9 dup(?)	; string(C)
GuardianSpirit db 16 dup(?) ; string(C)
Angel db 6 dup(?)	; string(C)
ArchAngel db 11	dup(?)	; string(C)
WarBears db 10 dup(?)	; string(C)
Sprites	db 8 dup(?)	; string(C)
Cockatrices db 12 dup(?) ; string(C)
Basilisk db 9 dup(?)	; string(C)
GiantSpiders db	14 dup(?) ; string(C)
StoneGiant db 12 dup(?)	; string(C)
Colossus db 9 dup(?)	; string(C)
Gorgons	db 8 dup(?)	; string(C)
EarthElemental db 16 dup(?) ; string(C)
Behemoth db 9 dup(?)	; string(C)
GreatWyrm db 11	dup(?)	; string(C)
FloatingIsland db 16 dup(?) ; string(C)
PhantomBeast db	14 dup(?) ; string(C)
PhantomWarriors	db 17 dup(?) ; string(C)
StormGiant db 12 dup(?)	; string(C)
AirElemental db	14 dup(?) ; string(C)
Djinn db 6 dup(?)	; string(C)
SkyDrake db 10 dup(?)	; string(C)
Nagas db 6 dup(?)	; string(C)
ends struct_Units


struc struct_Races ; (sizeof=0x5D)
Beastmen db 9 dup(?)	; string(C)
DarkElf	db 9 dup(?)	; string(C)
Dwarven	db 8 dup(?)	; string(C)
Gnoll db 6 dup(?)	; string(C)
Halfling db 9 dup(?)	; string(C)
HighElf	db 9 dup(?)	; string(C)
HighMen	db 9 dup(?)	; string(C)
Klackon	db 8 dup(?)	; string(C)
Lizardman db 10	dup(?)	; string(C)
Nomad db 6 dup(?)	; string(C)
Orc db 4 dup(?)		; string(C)
Troll db 6 dup(?)	; string(C)
ends struct_Races


struc struct_MagicRealms ; (sizeof=0x22)
aArcane	db 7 dup(?)	; string(C)
aNature	db 7 dup(?)	; string(C)
aSorcery db 8 dup(?)	; string(C)
aChaos db 6 dup(?)	; string(C)
aDeath db 6 dup(?)	; string(C)
ends struct_MagicRealms


struc struct_SpecialAbilities ;	(sizeof=0xCB)
Alchemy	db 8 dup(?)	; string(C)
Warlord	db 8 dup(?)	; string(C)
ChaosMastery db	14 dup(?) ; string(C)
NatureMastery db 15 dup(?) ; string(C)
SorceryMastery db 16 dup(?) ; string(C)
InfernalPower db 15 dup(?) ; string(C)
DivinePower db 13 dup(?) ; string(C)
SageMaster db 12 dup(?)	; string(C)
Channeler db 10	dup(?)	; string(C)
Myrran db 7 dup(?)	; string(C)
Archmage db 9 dup(?)	; string(C)
ManaFocusing db	14 dup(?) ; string(C)
NodeMastery db 13 dup(?) ; string(C)
Famous db 7 dup(?)	; string(C)
Runemaster db 11 dup(?)	; string(C)
Conjurer db 9 dup(?)	; string(C)
Charismatic db 12 dup(?) ; string(C)
Artificer db 10	dup(?)	; string(C)
ends struct_SpecialAbilities


; enum magic
e_FLI_MagSig  =	0AF11h
e_FLI_Frame_MagSig  = 0F1FAh
e_LBX_MagSig  =	0FEADh


; enum VGA
MAP_MASK  = 2
MEMORY_MODE  = 4
VGA_256_COLOR_MODE  = 13h
CRTC_MODE_CONTROL  = 17h
SC_INDEX  = 3C4h
SC_DATA	 = 3C5h
PALETTE_INDEX  = 3C8h
PALETTE_DATA  =	3C9h
GC_INDEX  = 3CEh
GC_DATA	 = 3CFh
CRTC_INDEX  = 3D4h
INPUT_STATUS  =	3DAh
VIDEO_RAM  = 0A000h
TEXT_MODE_VIDEO_RAM  = 0B800h


; enum BIOS_Data_Area
DAILY_TIMER_COUNTER_lw	= 46Ch
DAILY_TIMER_COUNTER_hw	= 46Eh


; enum length_size_offset
LBX_HEADER_LENGTH  = 200h


; enum enum_MS_DOS_EXE
e_MsDosExe_MagSig  = 5A4Dh


; enum LBX_ErrorType
e_LBX_ErrorType_0  = 0
e_NOT_FOUND  = 1
e_CORRUPTED  = 2
e_INSUFFICIENT_MEMORY  = 3
e_MISALLOCATED	= 4
e_ALLOCATION_TOO_SMALL	= 5
e_Whoops  = 6
e_NOT_AN_LBX  =	7
e_EXCEEDS_LBX_ENTRIES  = 8
e_INCORRECT_RECORD_SIZE	 = 9
e_EXCEEDS_DEFINED_RECORDS  = 0Ah
e_EMS_RELOAD_WO_RELEASE	 = 0Bh
e_INSUFFICIENT_EMM  = 0Ch
e_RESERVED_EMM_PICTURES_ONLY  =	0Dh
e_EMM_LOAD_ERROR  = 0Eh
e_LBX_ErrorType_15  = 0Fh
e_VGA_FRAME_EXCEEDS_65535  = 10h


; enum enum_MEM_Error_Type
enum_MEM_Error_Type_0  = 0
enum_MEM_Error_Type_1  = 1
enum_MEM_Error_Type_2  = 2
enum_MEM_Error_Type_3  = 3
enum_MEM_Error_Type_4  = 4


; enum e_SoundDrivers
SNDRV_9_ROLAND	= 9


; ;[]------------------------------------------------------------[]
; ;|	  C0.ASM -- Start Up Code				  |
; ;|								  |
; ;|	  Turbo	C++ Run	Time Library				  |
; ;|								  |
; ;|	  Copyright (c)	1987, 1991 by Borland International Inc.  |
; ;|	  All Rights Reserved.					  |
; ;[]------------------------------------------------------------[]
; enum enum_BCpp30_StartUp
dPtrSize_div2  = 1
PSPHigh	 = 2
dPtrSize_mul4  = 8
lgth_ZeroDivMSG	 = 0Eh
lgth_NullCheck	= 19h
lgth_abortMSG  = 1Eh
PSPEnv	= 2Ch
lgth_CopyRight	= 2Fh
PSPCmd	= 80h
MINSTACK_mul2  = 200h
CheckSum  = 0D5Ch
edata@	= 0AA4Ah


; enum enum_BCpp30_StartExit
e_PNEAR	 = 0
e_PFAR	= 1
e_NOTUSED  = 0FFh


; enum enum_BCpp_RTL
sys_nerr  = 30h
e_parameter  = 57h
e_dosFinalError	 = 58h

