;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2009 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: AC-7625-2E2D-92			    |
; |				 Valued	Client				    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	AABF5C934234A70885DEA7A0C8B3B5DE


    Ideal
    include uni.inc ; see unicode subdir of ida	for info on unicode

    p386n
    model large

    include "__MAGIC.inc"



; Segment type:	Pure code
segment	seg006 byte public 'CODE' use16
    assume cs:seg006
    ;org 0Eh
    assume es:nothing, ss:nothing, ds:dseg, fs:nothing,	gs:nothing



proc ST_SetVideoMode_TEXT far
    mov	ax, 3
    int	10h
    retf
endp ST_SetVideoMode_TEXT



; Attributes: noreturn bp-based	frame

proc DOS_Print_Exit far

arg0_PrintString= dword	ptr  6

    push bp
    mov	bp, sp

loc_145E7:
    mov	si, [word ptr bp+arg0_PrintString]

LOOP_LoadSB:
    lodsb
    cmp	al, 0
    jnz	short LOOP_LoadSB
    dec	si
    mov	[byte ptr si], 0Dh
    inc	si
    mov	[byte ptr si], 0Ah
    inc	si
    mov	[byte ptr si], 0Dh
    inc	si
    mov	[byte ptr si], 0Ah
    inc	si
    mov	[byte ptr si], '$'
    inc	si
    mov	dx, [word ptr bp+arg0_PrintString]
    mov	ah, 9
    int	21h
    mov	ah, 4Ch
    int	21h

loc_1460F:
    pop	bp

locret_14610:
    retf
endp DOS_Print_Exit



; Attributes: bp-based frame

proc sub_14611 far

arg_0= word ptr	 6

    push bp
    mov	bp, sp

loc_14614:
    mov	si, [bp+arg_0]

loc_14617:
    lodsb

loc_14618:
    cmp	al, 0

loc_1461A:
    jnz	short loc_14617

loc_1461C:
    dec	si

loc_1461D:
    mov	[byte ptr si], 0Dh

loc_14620:
    inc	si

loc_14621:
    mov	[byte ptr si], 0Ah
    inc	si

loc_14625:
    mov	[byte ptr si], 0Dh

loc_14628:
    inc	si
    mov	[byte ptr si], 0Ah

loc_1462C:
    inc	si

loc_1462D:
    mov	[byte ptr si], 24h

loc_14630:
    inc	si

loc_14631:
    mov	dx, [bp+arg_0]

loc_14634:
    mov	ah, 9

loc_14636:
    int	21h

loc_14638:
    pop	bp

locret_14639:
    retf
endp sub_14611




proc ST_GetDosMemAvail_KB far
    push es
    push ds
    push si
    push di
    mov	ah, 48h
    mov	bx, 0FFFFh
    int	21h

loc_14645:
    mov	ax, bx
    shr	ax, 1
    shr	ax, 1
    shr	ax, 1

loc_1464D:
    shr	ax, 1
    shr	ax, 1
    shr	ax, 1
    pop	di

loc_14654:
    pop	si
    pop	ds

loc_14656:
    pop	es
    retf
endp ST_GetDosMemAvail_KB




proc idk_PushPopEsDsSiDiRetF far
    push es
    push ds

loc_1465A:
    push si
    push di

loc_1465C:
    pop	di
    pop	si

loc_1465E:
    pop	ds
    pop	es

locret_14660:
    retf
endp idk_PushPopEsDsSiDiRetF




proc idk_PushPop_EsDsSiDi far
    push es
    push ds
    push si

loc_14664:
    push di
    pop	di

loc_14666:
    pop	si
    pop	ds

loc_14668:
    pop	es
    retf
endp idk_PushPop_EsDsSiDi

ends seg006
